{
  "service": {
    "name": "blog",
    "displayName": "Blog",
    "description": "Blog post management service",
    "version": "1.0.0",
    "author": "Vira Code Generator"
  },
  "database": {
    "table": "blog_posts",
    "entity": "BlogPost",
    "repository": "BlogPostRepository",
    "service": "BlogPostService",
    "controller": "BlogPostController"
  },
  "fields": [
    {
      "name": "id",
      "type": "BIGSERIAL",
      "javaType": "Long",
      "primaryKey": true,
      "nullable": false,
      "autoGenerated": true,
      "description": "Primary key identifier"
    },
    {
      "name": "user_id",
      "type": "BIGINT",
      "javaType": "Long",
      "nullable": false,
      "foreignKey": {
        "table": "auth_users",
        "field": "id",
        "onDelete": "CASCADE"
      },
      "validation": {
        "required": true
      },
      "description": "Author of the blog post"
    },
    {
      "name": "title",
      "type": "VARCHAR(255)",
      "javaType": "String",
      "nullable": false,
      "validation": {
        "required": true,
        "maxLength": 255,
        "sanitize": true
      },
      "description": "Blog post title"
    },
    {
      "name": "slug",
      "type": "VARCHAR(255)",
      "javaType": "String",
      "nullable": false,
      "validation": {
        "required": true,
        "maxLength": 255,
        "pattern": "^[a-z0-9-]+$"
      },
      "description": "URL-friendly slug for the post"
    },
    {
      "name": "content",
      "type": "TEXT",
      "javaType": "String",
      "nullable": false,
      "validation": {
        "required": true,
        "sanitize": true
      },
      "description": "Blog post content"
    },
    {
      "name": "excerpt",
      "type": "VARCHAR(500)",
      "javaType": "String",
      "nullable": true,
      "validation": {
        "maxLength": 500,
        "sanitize": true
      },
      "description": "Short excerpt of the post"
    },
    {
      "name": "status",
      "type": "VARCHAR(20)",
      "javaType": "String",
      "nullable": false,
      "validation": {
        "required": true,
        "maxLength": 20
      },
      "description": "Post status (DRAFT, PUBLISHED, ARCHIVED)"
    },
    {
      "name": "published_at",
      "type": "TIMESTAMP",
      "javaType": "LocalDateTime",
      "nullable": true,
      "description": "When the post was published"
    },
    {
      "name": "created_at",
      "type": "TIMESTAMP DEFAULT CURRENT_TIMESTAMP",
      "javaType": "LocalDateTime",
      "nullable": false,
      "autoGenerated": true,
      "description": "Record creation timestamp"
    },
    {
      "name": "updated_at",
      "type": "TIMESTAMP DEFAULT CURRENT_TIMESTAMP",
      "javaType": "LocalDateTime",
      "nullable": false,
      "autoGenerated": true,
      "updateOnModify": true,
      "description": "Record last update timestamp"
    }
  ],
  "operations": {
    "create": true,
    "read": true,
    "update": true,
    "delete": true,
    "list": true,
    "pagination": true,
    "customQueries": [
      {
        "name": "findByUserId",
        "description": "Find all blog posts for a specific user",
        "query": "SELECT * FROM {tableName} WHERE user_id = ? ORDER BY created_at DESC",
        "parameters": ["Long userId"],
        "returnType": "List<{entity}>"
      },
      {
        "name": "findByStatus",
        "description": "Find blog posts by status",
        "query": "SELECT * FROM {tableName} WHERE status = ? ORDER BY created_at DESC",
        "parameters": ["String status"],
        "returnType": "List<{entity}>"
      },
      {
        "name": "findPublishedPosts",
        "description": "Find all published blog posts",
        "query": "SELECT * FROM {tableName} WHERE status = 'PUBLISHED' AND published_at IS NOT NULL ORDER BY published_at DESC",
        "parameters": [],
        "returnType": "List<{entity}>"
      }
    ]
  },
  "api": {
    "basePath": "/api/blog/posts",
    "secured": true,
    "corsEnabled": true,
    "endpoints": [
      {
        "method": "GET",
        "path": "",
        "operation": "list",
        "description": "Get all blog posts with pagination",
        "pagination": true,
        "security": "USER"
      },
      {
        "method": "GET",
        "path": "/{id}",
        "operation": "read",
        "description": "Get blog post by ID",
        "security": "USER"
      },
      {
        "method": "POST",
        "path": "",
        "operation": "create",
        "description": "Create new blog post",
        "security": "USER"
      },
      {
        "method": "PUT",
        "path": "/{id}",
        "operation": "update",
        "description": "Update existing blog post",
        "security": "USER"
      },
      {
        "method": "DELETE",
        "path": "/{id}",
        "operation": "delete",
        "description": "Delete blog post",
        "security": "USER"
      }
    ]
  },
  "testing": {
    "generateUnitTests": true,
    "generateIntegrationTests": true,
    "generateRepositoryTests": true,
    "testDataSamples": [
      {
        "title": "My First Blog Post",
        "slug": "my-first-blog-post",
        "content": "This is the content of my first blog post...",
        "excerpt": "A short excerpt of my first post",
        "status": "PUBLISHED",
        "published_at": "2024-01-15T10:30:00"
      },
      {
        "title": "Draft Post",
        "slug": "draft-post",
        "content": "This is a draft post that hasn't been published yet...",
        "excerpt": "Draft post excerpt",
        "status": "DRAFT"
      }
    ]
  },
  "frontend": {
    "generateApiService": true,
    "generateTypeDefinitions": true,
    "framework": "react",
    "language": "typescript"
  }
} 