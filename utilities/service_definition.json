{
  "service": {
    "name": "finance",
    "displayName": "Finance",
    "description": "Financial transaction management service",
    "version": "1.0.0",
    "author": "Vira Code Generator"
  },
  "database": {
    "table": "finance_transactions",
    "entity": "Transaction",
    "repository": "TransactionRepository",
    "service": "TransactionService", 
    "controller": "TransactionController"
  },
  "fields": [
    {
      "name": "id",
      "type": "BIGSERIAL",
      "javaType": "Long",
      "primaryKey": true,
      "nullable": false,
      "autoGenerated": true,
      "description": "Primary key identifier"
    },
    {
      "name": "user_id",
      "type": "BIGINT",
      "javaType": "Long",
      "nullable": false,
      "foreignKey": {
        "table": "auth_users",
        "field": "id",
        "onDelete": "CASCADE"
      },
      "validation": {
        "required": true
      },
      "description": "User who owns this transaction"
    },
    {
      "name": "amount",
      "type": "DECIMAL(15,2)",
      "javaType": "BigDecimal",
      "nullable": false,
      "validation": {
        "required": true,
        "min": 0,
        "precision": 2,
        "scale": 2
      },
      "description": "Transaction amount"
    },
    {
      "name": "description",
      "type": "VARCHAR(500)",
      "javaType": "String",
      "nullable": true,
      "validation": {
        "maxLength": 500,
        "sanitize": true
      },
      "description": "Transaction description"
    },
    {
      "name": "category",
      "type": "VARCHAR(100)",
      "javaType": "String", 
      "nullable": false,
      "validation": {
        "required": true,
        "maxLength": 100,
        "sanitize": true
      },
      "description": "Transaction category"
    },
    {
      "name": "transaction_date",
      "type": "TIMESTAMP",
      "javaType": "LocalDateTime",
      "nullable": false,
      "validation": {
        "required": true
      },
      "description": "When the transaction occurred"
    },
    {
      "name": "created_at",
      "type": "TIMESTAMP DEFAULT CURRENT_TIMESTAMP",
      "javaType": "LocalDateTime",
      "nullable": false,
      "autoGenerated": true,
      "description": "Record creation timestamp"
    },
    {
      "name": "updated_at",
      "type": "TIMESTAMP DEFAULT CURRENT_TIMESTAMP",
      "javaType": "LocalDateTime",
      "nullable": false,
      "autoGenerated": true,
      "updateOnModify": true,
      "description": "Record last update timestamp"
    }
  ],
  "operations": {
    "create": true,
    "read": true,
    "update": true,
    "delete": true,
    "list": true,
    "pagination": true,
    "customQueries": [
      {
        "name": "findByUserId",
        "description": "Find all transactions for a specific user",
        "query": "SELECT * FROM {tableName} WHERE user_id = ?",
        "parameters": ["Long userId"],
        "returnType": "List<{entity}>"
      },
      {
        "name": "findByUserIdAndDateRange",
        "description": "Find transactions for user within date range",
        "query": "SELECT * FROM {tableName} WHERE user_id = ? AND transaction_date BETWEEN ? AND ? ORDER BY transaction_date DESC",
        "parameters": ["Long userId", "LocalDateTime startDate", "LocalDateTime endDate"],
        "returnType": "List<{entity}>"
      },
      {
        "name": "findByCategory",
        "description": "Find transactions by category",
        "query": "SELECT * FROM {tableName} WHERE category = ? ORDER BY transaction_date DESC",
        "parameters": ["String category"],
        "returnType": "List<{entity}>"
      }
    ]
  },
  "api": {
    "basePath": "/api/finance/transactions",
    "secured": true,
    "corsEnabled": true,
    "endpoints": [
      {
        "method": "GET",
        "path": "",
        "operation": "list",
        "description": "Get all transactions with pagination",
        "pagination": true,
        "security": "USER"
      },
      {
        "method": "GET", 
        "path": "/{id}",
        "operation": "read",
        "description": "Get transaction by ID",
        "security": "USER"
      },
      {
        "method": "POST",
        "path": "",
        "operation": "create", 
        "description": "Create new transaction",
        "security": "USER"
      },
      {
        "method": "PUT",
        "path": "/{id}",
        "operation": "update",
        "description": "Update existing transaction",
        "security": "USER"
      },
      {
        "method": "DELETE",
        "path": "/{id}",
        "operation": "delete",
        "description": "Delete transaction",
        "security": "USER"
      },
      {
        "method": "GET",
        "path": "/user/{userId}",
        "operation": "findByUserId",
        "description": "Get transactions for specific user",
        "security": "USER"
      }
    ]
  },
  "testing": {
    "generateUnitTests": true,
    "generateIntegrationTests": true,
    "generateRepositoryTests": true,
    "testDataSamples": [
      {
        "amount": "100.50",
        "description": "Test transaction 1",
        "category": "Food",
        "transaction_date": "2024-01-15T10:30:00"
      },
      {
        "amount": "250.00", 
        "description": "Test transaction 2",
        "category": "Transportation",
        "transaction_date": "2024-01-16T14:20:00"
      }
    ]
  },
  "frontend": {
    "generateApiService": true,
    "generateTypeDefinitions": true,
    "framework": "react",
    "language": "typescript"
  }
} 